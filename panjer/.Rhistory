x.scale = 0.25, maxit=10000, tol = 0.0005)
plot(panjanrjev_skoda, pch=10)
plot(panjarjev_algoritem(), pch=10)
#2a)
h <- 0.25
d <- 10/h
diskritirano <- discretize(pweibull(x, shape_weibull, scale_weibull), from = 0, to = (h*d), by = h, method='rounding')
#2b)
plot(stepfun(seq(0, (d - 1) * h , h), diffinv(diskritirano)), main = "Weibullova porazdelitev",ylab='Porazdelitvena funkcija', col='blue')
curve(pweibull(x, shape_weibull, scale_weibull), col='red', add=TRUE, lwd=2)
#2c)
diskritirano_komul_skode <- discretize(pweibull(x, shape_weibull, scale_weibull), from = 0, to = (h*d), by = h)
panjanrjev_skoda <- aggregateDist(method='recursive', model.freq = 'binom',
model.sev=diskritirano_komul_skode, size = n, prob = p,
x.scale = 0.25, maxit=1000, tol = 0.0025)
plot(panjanrjev_skoda, pch=10)
#2c)
diskritirano_komul_skode <- discretize(pweibull(x, shape_weibull, scale_weibull), from = 0, to = (h*d), by = h)
panjanrjev_skoda <- aggregateDist(method='recursive', model.freq = 'binom',
model.sev=diskritirano_komul_skode, size = n, prob = p,
x.scale = 0.25, maxit=10000, tol = 0.0005)
plot(panjanrjev_skoda, pch=10)
plot(panjanrjev_skoda, pch=5)
plot(panjanrjev_skoda, pch=100)
#2c)
diskritirano_komul_skode <- discretize(pweibull(x, shape_weibull, scale_weibull), from = 0, to = (h*d), by = h)
panjanrjev_skoda <- aggregateDist(method='recursive', model.freq = 'binom',
model.sev=diskritirano_komul_skode, size = n, prob = p,
x.scale = 0.25, maxit=10000, tol = 0.0005)
plot(panjanrjev_skoda, pch=100)
upanje_skoda <- mean(panjanrjev_skoda)
#------------------------------------------------------------
#(c)GPorazdelitvena funkcija s Panjerejvim algoritmom
#------------------------------------------------------------
#Izračun komulativnih škod
komulativne_skode <- discretize(pweibull(x, shape_weibull, scale_weibull),
from = 0, to = (h*(10/h)), by = h)
#Panjerjev algoritem s funkcijo aggregateDist
panjarjev_algoritem <- aggregateDist(method='recursive', model.freq = 'binom',
model.sev=komulativne_skode,
size = n, prob = p,
x.scale = 0.25, maxit=10000, tol = 0.0005)
plot(panjarjev_algoritem(), pch=10)
#Panjerjev algoritem s funkcijo aggregateDist
panjarjev_algoritem <- aggregateDist(method='recursive', model.freq = 'binom',
model.sev=komulativne_skode,
size = n, prob = p,
x.scale = 0.25, maxit=10000, tol = 0.0005)
plot(panjarjev_algoritem, pch=10)
#------------------------------------------------------------
#(c)GPorazdelitvena funkcija s Panjerejvim algoritmom
#------------------------------------------------------------
#Izračun komulativnih škod
h=0.5
komulativne_skode <- discretize(pweibull(x, shape_weibull, scale_weibull),
from = 0, to = (h*(10/h)), by = h)
#Panjerjev algoritem s funkcijo aggregateDist
panjarjev_algoritem <- aggregateDist(method='recursive', model.freq = 'binom',
model.sev=komulativne_skode,
size = n, prob = p,
x.scale = 0.25, maxit=10000, tol = 0.0005)
plot(panjarjev_algoritem, pch=10)
#------------------------------------------------------------
#(c)GPorazdelitvena funkcija s Panjerejvim algoritmom
#------------------------------------------------------------
#Izračun komulativnih škod
h=0.5
komulativne_skode <- discretize(pweibull(x, shape_weibull, scale_weibull),
from = 0, to = (h*(10/h)), by = h)
#Panjerjev algoritem s funkcijo aggregateDist
panjarjev_algoritem <- aggregateDist(method='recursive', model.freq = 'binom',
model.sev=komulativne_skode,
size = n, prob = p,
x.scale = 0.25, maxit=10000, tol = 0.0005)
plot(panjarjev_algoritem, pch=1)
#------------------------------------------------------------
#(d) Upanje in disperzija komulativne škode spremenljivke S
#------------------------------------------------------------
upanje_komulativna_skoda <- mean(panjarjev_algoritem)
disperzija_komulativna_skoda <- sum(diff(panjarjev_algoritem)*knots(panjarjev_algoritem)**2)
#============================================================
#TRETJA NALOGA - Določanje porazdelitve kumulativne škode z
#Monte Carlo simulacijami
#============================================================
#------------------------------------------------------------
#(a) Simulacija
#------------------------------------------------------------
stevilo_zahtevkov <- rbinom(10000, n, p)
vsota_skode <- c()
for (i in stevilo_zahtevkov){
vsota_skode <- c(vsota_skode, sum(rweibull(i, shape_weibull, scale_weibull)))
}
vsota_skode
#------------------------------------------------------------
#(b) Ocenitev upanja in disperzije spremenljivke S
#------------------------------------------------------------
#Ocenitev iz simulacije
ocena_upanje <- mean(vsota_skode)
ocena_disperzija<- var(vsota_skode)
#Podatki iz naloge 2(d)
upanje_komulativna_skoda
disperzija_komulativna_skoda
ocena_upanje
ocena_disperzija
upanje_simulacija_skode <- mean(simulacija_sum_skode)
simulacija_stevilo_zahtevkov <- rbinom(10000, n, p)
simulacija_sum_skode <- c()
for (i in simulacija_stevilo_zahtevkov){
simulacija_sum_skode <- c(simulacija_sum_skode, sum(rweibull(i, shape_weibull, scale_weibull)))
}
upanje_simulacija_skode <- mean(simulacija_sum_skode)
disperzija_skode <- var(simulacija_sum_skode)
plot(ecdf(simulacija_sum_skode), col='gold', add =TRUE)
upanje_simulacija_skode
disperzija_skode
upanje_skoda <- mean(panjanrjev_skoda)
disperzija_skoda <- sum(diff(panjanrjev_skoda)*knots(panjanrjev_skoda)**2) - upanje_skoda**2
upanje_skoda
disperzija_skoda
#------------------------------------------------------------
#(c) Porazdelitvena funkcija s Panjerejvim algoritmom(povečaj h)
#------------------------------------------------------------
#Izračun komulativnih škod
h=0.25
komulativne_skode <- discretize(pweibull(x, shape_weibull, scale_weibull),
from = 0, to = (h*(10/h)), by = h)
#Panjerjev algoritem s funkcijo aggregateDist
panjarjev_algoritem <- aggregateDist(method='recursive', model.freq = 'binom',
model.sev=komulativne_skode,
size = n, prob = p,
x.scale = 0.25, maxit=10000, tol = 0.0005)
plot(panjarjev_algoritem, pch=1)
#------------------------------------------------------------
#(d) Upanje in disperzija komulativne škode spremenljivke S
#------------------------------------------------------------
upanje_komulativna_skoda <- mean(panjarjev_algoritem)
disperzija_komulativna_skoda <- sum(diff(panjarjev_algoritem)*knots(panjarjev_algoritem)**2)
- upanje_komulativna_skoda**2
plot(panjarjev_algoritem, pch=1)
#------------------------------------------------------------
#(d)Upanje in disperzija
#------------------------------------------------------------
#N - Bin(n, p)
n=20
p=1/2
upanje_N <- n*p
disperzija_N <- n*p*(1-p)
#Spremenljivka Y
upanje_Y <- scale_weibull*gamma(1+(1/shape_weibull))
disperzija_Y <- (scale_weibull)^2*(gamma(1+(2/shape_weibull)) - (gamma(1+(1/shape_weibull)))^2)
#Upanje in disperzija S(Walldowe identitete)
upanje_S <- upanje_N * upanje_Y
disperzija_S <- disperzija_Y*upanje_N + upanje_Y^2 * disperzija_N
#============================================================
#DRUGA NALOGA - Določanje porazdelitve kumulativne škode s
#Panjerjevim algoritmom
#============================================================
#------------------------------------------------------------
#(a) Z zaokroževanjem diskretizirajte porazdelitev spremenljivke Y
#------------------------------------------------------------
#Verjetnostntna gostota Y(h=0.25(rekla je tako)), uporabi funkcijo discretize
h=0.25
diskritirana_Y <- discretize(pweibull(x, shape_weibull, scale_weibull),
from = 0, to = (h*(10/h)), by = h,
method='rounding')
#------------------------------------------------------------
#(b)Graf porazdelutvene funkcije Y - uporabi stepfun
#------------------------------------------------------------
plot(stepfun(seq(0, (10/h - 1) * h , h), diffinv(diskritirana_Y)),
main = "Weibullova porazdelitev", ylab='Porazdelitvena funkcija',
col='orange')
curve(pweibull(x, shape_weibull, scale_weibull), col='black', add=TRUE, lwd=2)
#------------------------------------------------------------
#(c) Porazdelitvena funkcija s Panjerejvim algoritmom(povečaj h)
#------------------------------------------------------------
#Izračun komulativnih škod
h=0.25
komulativne_skode <- discretize(pweibull(x, shape_weibull, scale_weibull),
from = 0, to = (h*(10/h)), by = h)
#Panjerjev algoritem s funkcijo aggregateDist
panjarjev_algoritem <- aggregateDist(method='recursive', model.freq = 'binom',
model.sev=komulativne_skode,
size = n, prob = p,
x.scale = 0.25, maxit=10000, tol = 0.0005)
plot(panjarjev_algoritem, pch=1)
#------------------------------------------------------------
#(d) Upanje in disperzija komulativne škode spremenljivke S
#------------------------------------------------------------
upanje_komulativna_skoda <- mean(panjarjev_algoritem)
disperzija_komulativna_skoda <- sum(diff(panjarjev_algoritem)*knots(panjarjev_algoritem)**2) - upanje_komulativna_skoda**2
#============================================================
#TRETJA NALOGA - Določanje porazdelitve kumulativne škode z
#Monte Carlo simulacijami
#============================================================
#------------------------------------------------------------
#(a) Simulacija
#------------------------------------------------------------
stevilo_zahtevkov <- rbinom(10000, n, p)
vsota_skode <- c()
for (i in stevilo_zahtevkov){
vsota_skode <- c(vsota_skode, sum(rweibull(i, shape_weibull, scale_weibull)))
}
#------------------------------------------------------------
#(b) Ocenitev upanja in disperzije spremenljivke S
#------------------------------------------------------------
#Ocenitev iz simulacije
ocena_upanje <- mean(vsota_skode)
ocena_disperzija<- var(vsota_skode)
#Podatki iz naloge 2(d)
upanje_komulativna_skoda #16.39175
disperzija_komulativna_skoda #283.1495
#Podatki iz naloge 2(d)
upanje_komulativna_skoda
ocena_disperzija
ocena_disperzija
ocena_upanje
#------------------------------------------------------------
#(c) Graf simulirane porazdelitvene funkcije za S
#------------------------------------------------------------
#Graf
plot(ecdf(vsota_skode), col='gold', add =TRUE)
#------------------------------------------------------------
#(b) Ocenitev upanja in disperzije spremenljivke S
#------------------------------------------------------------
#Ocenitev iz simulacije
ocena_upanje <- mean(vsota_skode) #35.43182
ocena_disperzija<- var(vsota_skode) #66.65821
#Podatki iz naloge 2(d)
upanje_komulativna_skoda #34.0302
disperzija_komulativna_skoda #61.89979
#------------------------------------------------------------
#(c) Graf simulirane porazdelitvene funkcije za S
#------------------------------------------------------------
#Graf
plot(ecdf(vsota_skode), col='gold', add =TRUE)
legend('bottomright', legend = c('Panjerjev algoritem', 'Monte Carlo simulacija'),
col = c('black', 'gold'), lty=1:1)
source("~/Desktop/faks/3_letnik/financni_praktikum/03_dn/Krzan3.R")
#------------------------------------------------------------
#(c) Graf simulirane porazdelitvene funkcije za S
#------------------------------------------------------------
#Graf
plot(ecdf(vsota_skode),
xlab="F_s(x)", ylab="x",
main="Aggregate Claim Amount Distribution - Recursive method approximation")
curve(pweibull(x, shape_weibull, scale_weibull), col="blue", add=TRUE, lwd=2)
legend("bottomright", legend = c("Panjerjev algoritem", "Monte Carlo simulacija"),
col = c("black", "green"), lty=1:1)
plot(ecdf(podatki_vzorec1$Podatki),
xlab="Višina odškodnine", ylab="Porazdelitvena funkcija",
main="Porazdelitvena funkcija odškodnin")
#------------------------------------------------------------
#(c) Graf simulirane porazdelitvene funkcije za S
#------------------------------------------------------------
#Graf
plot(ecdf(vsota_skode),
xlab="F_s(x)", ylab="x",
main="Aggregate Claim Amount Distribution - Recursive method approximation")
library(actuar)
#1a)
podatki <- read.delim("vzorec2.txt")
colnames(podatki) <- c("Podatki")
histogram_podatki <-hist(podatki$Podatki, main="Histogram odškodnin", xlab="Višina odškodnin", col='lightpink')
poskus1 <- mde(podatki$Podatki, pweibull, start=list("shape" = 1, "scale" = 5), measure = 'CvM')
shape_weibull=poskus1$estimate[1]
scale_weibull=poskus1$estimate[2]
#1c)
histogram_podatki <-hist(podatki$Podatki, main="Histogram odškodnin",breaks=15, xlab="Višina odškodnin", col='lightblue',
probability = TRUE, ylim=c(0,0.7))
curve(dweibull(x, shape_weibull, scale_weibull), col='red', add=TRUE, lwd=2)
legend('topright', legend = c('Weibullova porazdelitev'),
col = c('red'), lty=1:1)
plot(ecdf(podatki$Podatki), xlab='Visina odskodnine', ylab='Porazdelitvena funkcija', main='Porazdelitvena funkcija odskodnin')
curve(pweibull(x, shape_weibull, scale_weibull), col='red', add=TRUE, lwd=2)
legend('right', legend = c('empiricna porazdelitev', 'Weibullova porazdelitev'),
col = c('black', 'red'), lty=1:1)
#1d) N... BIN(n=20, p = 0.5)
n=20
p=0.5
upanje_N <- n*p
varianca_N <- n*p*(1-p)
upanje_Y <- scale_weibull*gamma(1+(1/shape_weibull))
varianca_Y <- (scale_weibull)^2*(gamma(1+(2/shape_weibull)) - (gamma(1+(1/shape_weibull)))^2)
#grande finale
upanje_S <- upanje_N * upanje_Y
varianca_S <- upanje_N*varianca_Y + (upanje_Y^2 * varianca_N)
#2a)
h <- 0.25
d <- 10/h
diskritirano <- discretize(pweibull(x, shape_weibull, scale_weibull), from = 0, to = (h*d), by = h, method='rounding')
#2b)
plot(stepfun(seq(0, (d - 1) * h , h), diffinv(diskritirano)), main = "Weibullova porazdelitev",ylab='Porazdelitvena funkcija', col='blue')
curve(pweibull(x, shape_weibull, scale_weibull), col='red', add=TRUE, lwd=2)
#2c)
diskritirano_komul_skode <- discretize(pweibull(x, shape_weibull, scale_weibull), from = 0, to = (h*d), by = h)
panjanrjev_skoda <- aggregateDist(method='recursive', model.freq = 'binom',
model.sev=diskritirano_komul_skode, size = n, prob = p,
x.scale = 0.25, maxit=10000, tol = 0.0005)
plot(panjanrjev_skoda, pch=100)
upanje_skoda <- mean(panjanrjev_skoda)
disperzija_skoda <- sum(diff(panjanrjev_skoda)*knots(panjanrjev_skoda)**2) - upanje_skoda**2
simulacija_stevilo_zahtevkov <- rbinom(10000, n, p)
simulacija_sum_skode <- c()
for (i in simulacija_stevilo_zahtevkov){
simulacija_sum_skode <- c(simulacija_sum_skode, sum(rweibull(i, shape_weibull, scale_weibull)))
}
upanje_simulacija_skode <- mean(simulacija_sum_skode)
disperzija_skode <- var(simulacija_sum_skode)
plot(ecdf(simulacija_sum_skode), col='gold', add =TRUE)
legend('bottomright', legend = c('Panjarjev algoritem', 'Monte Carlo Simulacija'),
col = c('black', 'gold'), lty=1:1)
upanje_simulacija_skode <- mean(simulacija_sum_skode)
disperzija_skode <- var(simulacija_sum_skode)
plot(ecdf(simulacija_sum_skode), col='gold', add =TRUE)
legend('bottomright', legend = c('Panjarjev algoritem', 'Monte Carlo Simulacija'),
col = c('black', 'gold'), lty=1:1)
simulacija_stevilo_zahtevkov <- rbinom(10000, n, p)
simulacija_sum_skode <- c()
for (i in simulacija_stevilo_zahtevkov){
simulacija_sum_skode <- c(simulacija_sum_skode, sum(rweibull(i, shape_weibull, scale_weibull)))
}
upanje_simulacija_skode <- mean(simulacija_sum_skode)
disperzija_skode <- var(simulacija_sum_skode)
plot(ecdf(simulacija_sum_skode), col='gold', add =TRUE)
legend('bottomright', legend = c('Panjarjev algoritem', 'Monte Carlo Simulacija'),
col = c('black', 'gold'), lty=1:1)
library(actuar)
#1a)
podatki <- read.delim("vzorec2.txt")
colnames(podatki) <- c("Podatki")
histogram_podatki <-hist(podatki$Podatki, main="Histogram odškodnin", xlab="Višina odškodnin", col='lightpink')
poskus1 <- mde(podatki$Podatki, pweibull, start=list("shape" = 1, "scale" = 5), measure = 'CvM')
shape_weibull=poskus1$estimate[1]
scale_weibull=poskus1$estimate[2]
#1c)
histogram_podatki <-hist(podatki$Podatki, main="Histogram odškodnin",breaks=15, xlab="Višina odškodnin", col='lightblue',
probability = TRUE, ylim=c(0,0.7))
curve(dweibull(x, shape_weibull, scale_weibull), col='red', add=TRUE, lwd=2)
legend('topright', legend = c('Weibullova porazdelitev'),
col = c('red'), lty=1:1)
plot(ecdf(podatki$Podatki), xlab='Visina odskodnine', ylab='Porazdelitvena funkcija', main='Porazdelitvena funkcija odskodnin')
curve(pweibull(x, shape_weibull, scale_weibull), col='red', add=TRUE, lwd=2)
legend('right', legend = c('empiricna porazdelitev', 'Weibullova porazdelitev'),
col = c('black', 'red'), lty=1:1)
#1d) N... BIN(n=20, p = 0.5)
n=20
p=0.5
upanje_N <- n*p
varianca_N <- n*p*(1-p)
upanje_Y <- scale_weibull*gamma(1+(1/shape_weibull))
varianca_Y <- (scale_weibull)^2*(gamma(1+(2/shape_weibull)) - (gamma(1+(1/shape_weibull)))^2)
#grande finale
upanje_S <- upanje_N * upanje_Y
varianca_S <- upanje_N*varianca_Y + (upanje_Y^2 * varianca_N)
#2a)
h <- 0.25
d <- 10/h
diskritirano <- discretize(pweibull(x, shape_weibull, scale_weibull), from = 0, to = (h*d), by = h, method='rounding')
#2b)
plot(stepfun(seq(0, (d - 1) * h , h), diffinv(diskritirano)), main = "Weibullova porazdelitev",ylab='Porazdelitvena funkcija', col='blue')
curve(pweibull(x, shape_weibull, scale_weibull), col='red', add=TRUE, lwd=2)
#2c)
diskritirano_komul_skode <- discretize(pweibull(x, shape_weibull, scale_weibull), from = 0, to = (h*d), by = h)
panjanrjev_skoda <- aggregateDist(method='recursive', model.freq = 'binom',
model.sev=diskritirano_komul_skode, size = n, prob = p,
x.scale = 0.25, maxit=10000, tol = 0.0005)
plot(panjanrjev_skoda, pch=100)
upanje_skoda <- mean(panjanrjev_skoda)
disperzija_skoda <- sum(diff(panjanrjev_skoda)*knots(panjanrjev_skoda)**2) - upanje_skoda**2
simulacija_stevilo_zahtevkov <- rbinom(10000, n, p)
simulacija_sum_skode <- c()
for (i in simulacija_stevilo_zahtevkov){
simulacija_sum_skode <- c(simulacija_sum_skode, sum(rweibull(i, shape_weibull, scale_weibull)))
}
upanje_simulacija_skode <- mean(simulacija_sum_skode)
disperzija_skode <- var(simulacija_sum_skode)
plot(ecdf(simulacija_sum_skode), col='gold', add =TRUE)
legend('bottomright', legend = c('Panjarjev algoritem', 'Monte Carlo Simulacija'),
col = c('black', 'gold'), lty=1:1)
library(actuar)
#Uvoz podatkov:
podatki_vzorec1 <- read.delim("vzorec1.txt")
colnames(podatki_vzorec1) <- c("Podatki")
#Histogram vzorčne porazdelotve škodnih zahtevkov
histogram <-hist(podatki_vzorec1$Podatki,
main="Histogram odškodnin",
xlab="Višina odškodnin",
col="lightblue")
parametri <- mde(podatki_vzorec1$Podatki, pweibull, start=list("shape" = 1, "scale" = 5), measure = "CvM")
shape_weibull=parametri$estimate[1]
scale_weibull=parametri$estimate[2]
hist(podatki_vzorec1$Podatki,
main="Histogram odškodnin",
xlab="Višina odškodnin",
col="lightblue",
probability = TRUE,
ylim=c(0,0.8),
breaks=15)
curve(dweibull(x, shape_weibull, scale_weibull), col="blue", add=TRUE, lwd=2)
legend("topright", legend = c("Weibullova porazdelitev"),
col = c("blue"), lty=1:1)
#Teoretična porazdelitvena funkcija
plot(ecdf(podatki_vzorec1$Podatki),
xlab="Višina odškodnine", ylab="Porazdelitvena funkcija",
main="Porazdelitvena funkcija odškodnin")
curve(pweibull(x, shape_weibull, scale_weibull), col="blue", add=TRUE, lwd=2)
legend("right", legend = c("empirična porazdelitev", "Weibullova porazdelitev"),
col = c("black", "blue"), lty=1:1, bty="n")
#------------------------------------------------------------
#(d)Upanje in disperzija
#------------------------------------------------------------
#N - Bin(n, p)
n=20
p=1/2
upanje_N <- n*p
disperzija_N <- n*p*(1-p)
#Spremenljivka Y
upanje_Y <- scale_weibull*gamma(1+(1/shape_weibull))
disperzija_Y <- (scale_weibull)^2*(gamma(1+(2/shape_weibull)) - (gamma(1+(1/shape_weibull)))^2)
#Upanje in disperzija S(Walldowe identitete)
upanje_S <- upanje_N * upanje_Y
disperzija_S <- disperzija_Y*upanje_N + upanje_Y^2 * disperzija_N
#============================================================
#DRUGA NALOGA - Določanje porazdelitve kumulativne škode s
#Panjerjevim algoritmom
#============================================================
#------------------------------------------------------------
#(a) Z zaokroževanjem diskretizirajte porazdelitev spremenljivke Y
#------------------------------------------------------------
#Verjetnostntna gostota Y(h=0.25(rekla je tako)), uporabi funkcijo discretize
h=0.25
diskritirana_Y <- discretize(pweibull(x, shape_weibull, scale_weibull),
from = 0, to = (h*(10/h)), by = h,
method="rounding")
#------------------------------------------------------------
#(b)Graf porazdelutvene funkcije Y - uporabi stepfun
#------------------------------------------------------------
plot(stepfun(seq(0, (10/h - 1) * h , h), diffinv(diskritirana_Y)),
main = "Weibullova porazdelitev", ylab="Porazdelitvena funkcija",
col="orange")
curve(pweibull(x, shape_weibull, scale_weibull), col="black", add=TRUE, lwd=2)
#------------------------------------------------------------
#(c) Porazdelitvena funkcija s Panjerejvim algoritmom(povečaj h)
#------------------------------------------------------------
#Izračun komulativnih škod
h=0.25
komulativne_skode <- discretize(pweibull(x, shape_weibull, scale_weibull),
from = 0, to = (h*(10/h)), by = h)
#Panjerjev algoritem s funkcijo aggregateDist
panjarjev_algoritem <- aggregateDist(method="recursive", model.freq = "binom",
model.sev=komulativne_skode,
size = n, prob = p,
x.scale = 0.25, maxit=10000, tol = 0.0005)
plot(panjarjev_algoritem, pch=100)
#------------------------------------------------------------
#(d) Upanje in disperzija komulativne škode spremenljivke S
#------------------------------------------------------------
upanje_komulativna_skoda <- mean(panjarjev_algoritem)
disperzija_komulativna_skoda <- sum(diff(panjarjev_algoritem)*knots(panjarjev_algoritem)**2) - upanje_komulativna_skoda**2
#============================================================
#TRETJA NALOGA - Določanje porazdelitve kumulativne škode z
#Monte Carlo simulacijami
#============================================================
#------------------------------------------------------------
#(a) Simulacija
#------------------------------------------------------------
stevilo_zahtevkov <- rbinom(10000, n, p)
vsota_skode <- c()
for (i in stevilo_zahtevkov){
vsota_skode <- c(vsota_skode, sum(rweibull(i, shape_weibull, scale_weibull)))
}
#------------------------------------------------------------
#(b) Ocenitev upanja in disperzije spremenljivke S
#------------------------------------------------------------
#Ocenitev iz simulacije
ocena_upanje <- mean(vsota_skode) #35.43182
ocena_disperzija<- var(vsota_skode) #66.65821
#Podatki iz naloge 2(d)
upanje_komulativna_skoda #34.0302
disperzija_komulativna_skoda #61.89979
#------------------------------------------------------------
#(c) Graf simulirane porazdelitvene funkcije za S
#------------------------------------------------------------
#Graf
plot(ecdf(vsota_skode), col="green", add =TRUE)
legend("bottomright", legend = c("Panjarjev algoritem", "Monte Carlo Simulacija"),
col = c("black", "green"), lty=1:1)
#------------------------------------------------------------
#(c) Graf simulirane porazdelitvene funkcije za S
#------------------------------------------------------------
#Graf
plot(ecdf(vsota_skode), col="green", add =TRUE)
legend("bottomright", legend = c("Panjarjev algoritem", "Monte Carlo Simulacija"),
col = c("black", "green"), lty=1:1, bty="n")
plot(panjarjev_algoritem, pch=100)
#------------------------------------------------------------
#(d) Upanje in disperzija komulativne škode spremenljivke S
#------------------------------------------------------------
upanje_komulativna_skoda <- mean(panjarjev_algoritem)
#------------------------------------------------------------
#(c) Graf simulirane porazdelitvene funkcije za S
#------------------------------------------------------------
#Graf
plot(ecdf(vsota_skode), col="green", add =TRUE)
legend("bottomright", legend = c("Panjarjev algoritem", "Monte Carlo Simulacija"),
col = c("black", "green"), lty=1:1, bty="n")
#Graf 2(c)
plot(ecdf(panjarjev_algoritem), col="green", add =TRUE)
#Graf 2(c)
plot(panjarjev_algoritem, pch=100)
source("~/Desktop/faks/3_letnik/financni_praktikum/03_dn/Krzan3.R")
source("~/Desktop/faks/3_letnik/financni_praktikum/03_dn/Krzan3.R")
